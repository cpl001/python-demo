"""
==================================
Author : "cpl"
Time : 22:20
Data : 2020/12/27
Project : web_study

===================================
"""
# 0529  函数
"""
函数：定义功能实现，并可以重复使用
关键字：def
格式：def 函数名称():
        需要缩进的函数体
        实现功能的代码
"""
# 函数参数
# 1、形参和实参
# 2、定义时，为形参
#    调用时，传实参
# eg：定义社保缴纳时，需要认证实名认证：身份证和人脸识别信息
#     具体使用缴纳时，提供你的认证：身份证号，和脸



def get_money():    #冒号之后，是功能的实现代码.冒号之后起码保留一行代码
    print("取了500万")
    print("我笑醒了")
    print("不用上班")
# 使用 函数名称()
get_money()

# 函数参数几种玩法：
# 定义时：必传参数，默认参数，不定长参数
# 1、必传参数
# 2、默认参数：形参 = 实参
# 3、不定长参数：*ards、**kwargs
#     参数顺序：必传参数 > 默认参数 > 不定长参数

# 第一种 位置参数
# 准备几个坑，相当于告诉调用者，必须把坑填满，否则功能使用不了。
# 定义时，()放的形参，并不是具体的数据，形参用变量表达。
# 形参个数有什么来决定？  需求决定   功能实现需要几个用户数据
def get_money_v2(cardNum,passwd,count):

    """
函数功能说明（3个冒号+enter就出现下面的说明）
    :param cardNum: 卡号
    :param passwd:  密码
    :param count:   取款金额
    :return:
    """
    # pass #还没想好写什么代码，不写的话会报错，因为冒号后面至少保留1行代码。所以使用pass占位（下面写了if语句，就可以注销这句）
    # 卡号必须大于10位。是字符串
    if len(cardNum) < 10:
        print("卡号输错，请重新输入")
    # 密码必须为6位，否则不玩了
    if len(passwd) < 6:
        print('密码错误，亲重新输入')
        # 金额必须为100的整数倍，不然提示金额出错
    if int(count) % 100 != 0:
        print("请取100的倍数")

# 调用
# 1、所有参数必须得传
# 2、位置传参，对应的位置传对应的值，有几个就传几个
# 调用的时候，传的是具体的数据，叫做实参

get_money_v2("12345678900",'12121212','210')  #ctrl + b 查看源码



#第二种，默认传参：
# 默认参数：如果你没有传对应的实参，我就默认使用我在定义时提供的值
# 定义时，形参=值
# 默认参数在最后，如：def get_money_v3(cardNum,passwd,count = "1000")，
#               如果(cardNum,passwd = "123456",count)，这样就不行
# 不限定个数
# def get_money_v3(cardNum,passwd = "123456",count = 1000):
# # 卡号必须大于10位。是字符串
#      if len(cardNum) < 10:
#          print("卡号输错，再见")
#      # 密码必须为6位，否则不玩了
#      if len(passwd) < 6:
#          print('密码错误，再见')
#          # 金额必须为100的整数倍，不然提示金额出错
#      if int(count) % 100 != 0:
#          print("请取100的倍数")
#      else:
#          print(count)
#
#  # 调用(有3种传参方式）
#  get_money_v3('1234567890000')   #使用默认传参
#  get_money_v3("123456789000",'123000')   #部分使用默认值
#  # 调用时，关键字参数，传参时，形参=实参
#  get_money_v3('1234567890000',count = 2000)



# # 第三种： 不定长传参
# # *args
# def get_money_v4(cardNum,*args):
# # *args是元组 ()
# # 以后不知道自己传多少参数的时候，就用*args
# # 卡号必须大于10位。是字符串
#      if len(cardNum) < 10:
#          print("卡号输错，再见")
# #     # 密码必须为6位，否则不玩了
#      print(args)#输出结果：(True, '123456', 100)
#
#
#  get_money_v4('1234567890000')
#  get_money_v4('1234567890000',True,'123456',100)  #输出结果：(True, '123456', 100)


# # **kwargs 成双成对传参
# # kwargs是字典：{key:value}
# def get_money_v4(cardNum,*args,**kwargs):
# # *args是元组 ()
# # 以后不知道自己传多少参数的时候，就用*args
# # 卡号必须大于10位。是字符串
#      if len(cardNum) < 10:
#          print("卡号输错，再见")
#      print(args)#输出结果：True,'123456',100,
#      print(kwargs)#输出结果：{'name': '小简', 'city': '长沙'}
#
# # get_money_v4('1234567890000',True,'123456',100,name = "小简",city = "长沙") #输出结果：{'name': '小简', 'city': '长沙'}
#
# # 位置参数（必传），默认参数（可传可不传），不定长参数（支持传多个）
# # 如果这3个都在一起，那么写的顺序是：1位置参数（必传），2不定长参数（支持传多个），3默认参数（可传可不传）



# # 返回值return   礼尚往来 有去有回
# def get_money_v5(cardNum,passwd = "123456",count = 1000):
# # 卡号必须大于10位。是字符串
#      if len(cardNum) < 10:
#          print("卡号输错，再见")
#          return cardNum     #遇到return就退出函数调用！！！
# #    # 密码必须为6位，否则不玩了
#      if len(passwd) != 6:
#          print('密码错误，再见')
#          return
# #         # 金额必须为100的整数倍，不然提示金额出错
#      if int(count) % 100 != 0:
#          print("请取100的倍数")
#      else:
#          # 3个条件都满足了，就给你吐钱
#          print("条件满足，准备吐钱")
#          return cardNum,count
#
# # 接收返回值，变量 = 函数调用
# get_money_v5('123456789000')    #调用

"""
总结：
函数
函数是做什么的：功能实现
函数先定义在调用
定义：def 函数名称():
            实现功能
"""
"""
参数：与用户交互，在实现功能的时候，需要与外部交互，需要外部提供一定的数据，以实现功能。
由需求觉得，有没有参数，有几个参数
参数的类型：位置参数，默认参数，不定长参数(*args,**kwargs)
调用的的时候，必传位置参数，默认参数可传可不传，也可以用换剪子传参（形参=实参），不定长参数可以传多个
"""

"""
函数再使用之后，给用户的输出，由输入由输出，有反馈
给返回值，return关键字实现
1、函数无return，默认调用后的返回值为None
2、return 值  值可以是任意类型数据
3、return后可以不跟值，标识返回为none
4、调用函数时，遇到return，则结束函数调用
调用的时候，接收功能的输出：变量 = 函数调用"""
